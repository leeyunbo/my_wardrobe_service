#Database Settings
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/wardrobe_db?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=1234

# JPA Settings

# create : 테이블이 없을 경우, 테이블 생성
# create-drop : 테스트 환경에 적합, table을 생성하고 종료 후 테이블 drop
# update : 이미 테이블이 존재하는 상황에서 @Entity에 속성이 추가될 경우, 기본 테이블 데이터에는 변화 없이 새로운 Column을 추가
# none : 아무것도 하지 않는다.
spring.jpa.hibernate.ddl-auto=update

# DDL 생성 시 데이터베이스 고유의 기능을 사용하는지에 대한 유무
spring.jpa.generate-ddl=false

# CRUD sql 로깅을 보여준다.
spring.jpa.show-sql=true

# 사용하는 데이터베이스를 지정한다.
spring.jpa.database=mysql

# Hibernate는 내부적으로 지정되는 DB에 맞게 SQL문을 생성하는 Dialect가 존재한다.
# Dialect는 Hibernate가 다양한 데이터베이스를 처리하기 위해 각 데이터베이스에 맞는 SQL문법을 처리하기 위해 존재한다.
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

# 로깅에 표시되는 SQL을 보기 좋게 표시해줌
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true


# hibernate logging 레벨 설정 (info, debug)
logging.level.org.hibernate=info

#전체 로그 레벨 설정(기본 info)
logging.level.root=debug

#application.properties에서 application-oauth.properties를 포함 (설정을 포함한다.)
spring.profiles.include=oauth


